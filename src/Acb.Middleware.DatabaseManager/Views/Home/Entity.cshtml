@using System.Text
@using System.Text.RegularExpressions
@using Acb.Core.Extensions
@using Acb.Core.Helper
@using Acb.Middleware.DatabaseManager.Domain.Enums
@model Acb.Middleware.DatabaseManager.Domain.Models.Table
@{
    var provider = ViewData.GetValue<DbProvider>("Provider");
    var primary = Model.PrimaryColumn;
    const Language language = Language.CSharp;

    var html = new StringBuilder();
    var desc = string.IsNullOrWhiteSpace(Model.Description) ? Model.Name : Model.Description;
    html.AppendLine($"///<summary> {desc} </summary>");
    html.AppendLine($"[Naming(\"{Model.Name}\")]");
    html.AppendLine($"public class {Model.ConvertedName}: BaseEntity<{primary?.LanguageType(provider, language) ?? "string"}>");
    html.AppendLine("{");
    var index = 0;
    foreach (var col in Model.Columns)
    {
        desc = RegexHelper.ClearTrn(string.IsNullOrWhiteSpace(col.Description) ? col.Name : col.Description);
        html.AppendLine($"\t///<summary> {desc} </summary>");
        if (col.IsConverted)
        {
            html.AppendLine($"\t[Naming(\"{col.Name}\")]");
        }
        var over = col.IsPrimaryKey ? "override " : string.Empty;
        html.AppendLine($"\tpublic {over}{col.LanguageType(provider, language)} {col.ConvertedName} {{ get; set; }}");
        index++;
        if (index < Model.Columns.Count())
        {
            html.AppendLine(string.Empty);
        }
    }
    html.AppendLine("}");
}
<div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <h4 class="modal-title">@Model.Name<small style="margin-left: 15px">@Model.Description</small></h4>
        </div>
        <div class="modal-body">
            <div class="coder">
                <pre>
                <a class="btn btn-default copy-btn" role="button" data-trigger="focus" data-clipboard-action="copy" data-clipboard-target="#@("code"+Model.Name)">Copy</a>
<code class="cs" id="@("code"+Model.Name)">@(Regex.Replace(html.ToString(), "\t\n", string.Empty))</code>
                </pre>
            </div>
        </div>
    </div>
</div>